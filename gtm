#!/bin/bash
## TFN VPN
## Script to keep-alive your DNSTT server domain record query from target resolver/local dns server
## Run this script excluded to your VPN tunnel (split vpn tunneling mode)

## Your DNSTT Nameserver & your Domain `A` Record
NS='phc.jericoo.site'

## Add your DNS here
declare -a HOSTS=('124.6.181.31' '124.6.181.171' '124.6.181.30' '124.6.181.160' '124.6.181.88' '124.6.181.26' '124.6.181.27' '124.6.181.25' '124.6.181.28')

## Linux' dig command executable filepath
## Select value: "CUSTOM|C" or "DEFAULT|D"
DIG_EXEC="DEFAULT"
## if set to CUSTOM, enter your custom dig executable path here
CUSTOM_DIG=/data/data/com.termux/files/home/go/bin/fastdig

######################################
######################################
######################################
######################################
######################################
VER=0.1
case "${DIG_EXEC}" in
 DEFAULT|D)
 _DIG="$(command -v dig)"
 ;;
 CUSTOM|C)
 _DIG="${CUSTOM_DIG}"
 ;;
esac
if [ ! $(command -v ${_DIG}) ]; then
 printf "%b" "Dig command failed to run, " \
 "please install dig(dnsutils) or check " \
 "\$DIG_EXEC & \$CUSTOM_DIG variable inside $( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )/$(basename "$0") file.\n" && exit 1
fi
endscript() {
 unset NS A LOOP_DELAY HOSTS _DIG DIG_EXEC CUSTOM_DIG T R M
 exit 1
}
trap endscript 2 15
check(){
 for ((i=0; i<"${#HOSTS[*]}"; i++)); do
  for R in "${NS}"; do
   T="${HOSTS[$i]}"
   [[ -z $(timeout -k 3 3 ${_DIG} @${T} ${R}) ]] && M=31 || M=32;
   echo -e "\e[1;${M}m\$ NS:${R} DNS:${T}\e[0m"
   unset T R M
  done
 done
}

echo "===================================================="
echo "       DNSTT Keep-Alive script "
echo "===================================================="
echo -e "DNS List: [\e[1;34m${HOSTS[*]}\e[0m]"
echo "CTRL + C to close script"

# Prompt user for loop delay
while true; do
 read -p "Please enter loop delay (0-5 seconds): " LOOP_DELAY
 if [[ ${LOOP_DELAY} =~ ^[0-5]$ ]]; then
   break
 else
   echo "Invalid input. Please enter a number between 0 and 5."
 fi
done

[[ "${LOOP_DELAY}" -eq 1 ]] && let "LOOP_DELAY++";
while true; do
 check
 echo -e "\e[1;33m├───────────────TFN─VPN────────────────┤\e[0m"
 sleep ${LOOP_DELAY}
done
exit 0